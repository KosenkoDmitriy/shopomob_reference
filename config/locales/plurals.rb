{
#    :af  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :am  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :ar  => { :i18n => { :pluralize => lambda { |n| n == 0 ? :zero : n == 1 ? :one : n == 2 ? :two : (3..10).include?(n % 100) ? :few : (11..99).include?(n % 100) ? :many : :other } } },
#    :az  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :be  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 && n % 100 != 11 ? :one : (2..4).include?(n % 10) && !(12..14).include?(n % 100) ? :few : n % 10 == 0 || (5..9).include?(n % 10) || (11..14).include?(n % 100) ? :many : :other } } },
#    :bg  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :bh  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :bn  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :bo  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :bs  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 && n % 100 != 11 ? :one : (2..4).include?(n % 10) && !(12..14).include?(n % 100) ? :few : n % 10 == 0 || (5..9).include?(n % 10) || (11..14).include?(n % 100) ? :many : :other } } },
#    :ca  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :cs  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : (2..4).include?(n) ? :few : :other } } },
#    :cy  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 2 ? :two : n == 8 || n == 11 ? :many : :other } } },
#    :da  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :de  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :dz  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :el  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
:en  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#:en => {
#    :'i18n' => {
#        :plural => {
#            :rule => lambda { |n| n == 1 ? :one : :other }
#        }
#    }
#},
#    :eo  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :es  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :et  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :eu  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :fa  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :fi  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :fil => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :fo  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :fr  => { :i18n => { :pluralize => lambda { |n| n && n != 2 ? :one : :other } } },
#    :fur => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :fy  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :ga  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 2 ? :two : :other } } },
#    :gl  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :gu  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :guw => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :ha  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :he  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :hi  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :hr  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 && n % 100 != 11 ? :one : (2..4).include?(n % 10) && !(12..14).include?(n % 100) ? :few : n % 10 == 0 || (5..9).include?(n % 10) || (11..14).include?(n % 100) ? :many : :other } } },
#    :hu  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :id  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :is  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :it  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :iw  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :ja  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :jv  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :ka  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :km  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :kn  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :ko  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :ku  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :lb  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :ln  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :lt  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 && !(11..19).include?(n % 100) ? :one : (2..9).include?(n % 10) && !(11..19).include?(n % 100) ? :few : :other } } },
#    :lv  => { :i18n => { :pluralize => lambda { |n| n == 0 ? :zero : n % 10 == 1 && n % 100 != 11 ? :one : :other } } },
#    :mg  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :mk  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 ? :one : :other } } },
#    :ml  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :mn  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :mo  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 0 ? :few : :other } } },
#    :mr  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :ms  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :mt  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 0 || (2..10).include?(n % 100) ? :few : (11..19).include?(n % 100) ? :many : :other } } },
#    :my  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :nah => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :nb  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :ne  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :nl  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :nn  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :no  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :nso => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :om  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :or  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :pa  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :pap => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :pl  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : (2..4).include?(n % 10) && !(12..14).include?(n % 100) && !(22..24).include?(n % 100) ? :few : :other } } },
#    :ps  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :pt  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :"pt-PT" => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :ro  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 0 ? :few : :other } } },
#    #:ru  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 && n % 100 != 11 ? :one : (2..4).include?(n % 10) && !(12..14).include?(n % 100) ? :few : n % 10 == 0 || (5..9).include?(n % 10) || (11..14).include?(n % 100) ? :many : :other } } },
:ru => {
    :'i18n' => {
        :plural => {
            :rule => lambda { |n| n == 1 ? :one : :other }
        }
    }
},
#
#    :se  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 2 ? :two : :other } } },
#    :sh  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 && n % 100 != 11 ? :one : (2..4).include?(n % 10) && !(12..14).include?(n % 100) ? :few : n % 10 == 0 || (5..9).include?(n % 10) || (11..14).include?(n % 100) ? :many : :other } } },
#    :sk  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : (2..4).include?(n) ? :few : :other } } },
#    :sl  => { :i18n => { :pluralize => lambda { |n| n % 100 == 1 ? :one : n % 100 == 2 ? :two : (3..4).include?(n % 100) ? :few : :other } } },
#    :sma => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 2 ? :two : :other } } },
#    :smi => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 2 ? :two : :other } } },
#    :smj => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 2 ? :two : :other } } },
#    :smn => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 2 ? :two : :other } } },
#    :sms => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : n == 2 ? :two : :other } } },
#    :so  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :sq  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :sr  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 && n % 100 != 11 ? :one : (2..4).include?(n % 10) && !(12..14).include?(n % 100) ? :few : n % 10 == 0 || (5..9).include?(n % 10) || (11..14).include?(n % 100) ? :many : :other } } },
#    :sv  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :sw  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :ta  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :te  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :th  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :ti  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :tk  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :tl  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :to  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :tr  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :uk  => { :i18n => { :pluralize => lambda { |n| n % 10 == 1 && n % 100 != 11 ? :one : (2..4).include?(n % 10) && !(12..14).include?(n % 100) ? :few : n % 10 == 0 || (5..9).include?(n % 10) || (11..14).include?(n % 100) ? :many : :other } } },
#    :ur  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } },
#    :vi  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :wa  => { :i18n => { :pluralize => lambda { |n| (0..1).include?(n) ? :one : :other } } },
#    :yo  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :zh  => { :i18n => { :pluralize => lambda { |n| :other } } },
#    :zu  => { :i18n => { :pluralize => lambda { |n| n == 1 ? :one : :other } } }
}